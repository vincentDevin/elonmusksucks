generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Outcome {
  YES
  NO
  CANCELLED
}

enum BetOption {
  YES
  NO
  OVER
  UNDER
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  name           String
  passwordHash   String
  role           Role             @default(USER)
  muskBucks      Int              @default(1000)
  bets           Bet[]
  refreshTokens  RefreshToken[]
  createdAt      DateTime         @default(now())
}

model Prediction {
  id           Int        @id @default(autoincrement())
  title        String
  description  String
  category     String
  expiresAt    DateTime
  resolved     Boolean    @default(false)
  resolvedAt   DateTime?  // when outcome was set
  outcome      Outcome?   // only populated once resolved
  bets         Bet[]
  createdAt    DateTime   @default(now())

  @@index([expiresAt, resolved])
}

model Bet {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  prediction    Prediction  @relation(fields: [predictionId], references: [id])
  predictionId  Int
  amount        Int
  option        BetOption   // yes/no or over/under
  won           Boolean?    // null until resolved
  payout        Int?        // null until resolved
  createdAt     DateTime    @default(now())
}

model AITweet {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}